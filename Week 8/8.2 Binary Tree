using System;

public class TreeNode
{
    public int val;
    public TreeNode left;
    public TreeNode right;

    public TreeNode(int val = 0, TreeNode left = null, TreeNode right = null)
    {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

public class Solution
{
    public bool IsSymmetric(TreeNode root)
    {
        return IsMirror(root, root);
    }

    private bool IsMirror(TreeNode root1, TreeNode root2)
    {
        if (root1 == null && root2 == null)
            return true;
        if (root1 != null && root2 != null && root1.val == root2.val)
            return IsMirror(root1.left, root2.right) && IsMirror(root1.right, root2.left);
        return false;
    }

    public static void Main(string[] args)
    {
        // Example usage:
        TreeNode root1 = new TreeNode(1);
        root1.left = new TreeNode(2);
        root1.right = new TreeNode(2);
        root1.left.left = new TreeNode(3);
        root1.left.right = new TreeNode(4);
        root1.right.left = new TreeNode(4);
        root1.right.right = new TreeNode(3);

        Solution solution = new Solution();
        if (solution.IsSymmetric(root1))
            Console.WriteLine("Symmetric");
        else
            Console.WriteLine("Not symmetric");
    }
}
